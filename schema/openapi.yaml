openapi: 3.0.1
info:
  title: Saga Serverless Sample
  description: >-
    AWS CDKで作成するサーバレスアプリケーション  
    
    Sagaオーケストレーションパターン  

    参照: [マイクロサービスパターン 実践的システムデザインのためのコード解説](https://book.impress.co.jp/books/1118101063)
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
paths:
  /order:
    post:
      tags:
        - order
      summary: Create Order
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        $ref: '#/components/requestBodies/orderRequest'
      responses:
        '200':
          $ref: '#/components/responses/OrderResponse'
      x-codegen-request-body-name: body
  /order/{order_id}:
    get:
      tags:
        - order
      summary: Get Order by id
      operationId: getOrderByID
      parameters:
        - name: order_id
          in: path
          description: 'get order by Id'
          required: true
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/OrderResponse'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
    put:
      tags:
        - order
      summary: Updated order
      operationId: updateOrder
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/orderRequest'
      responses:
        '200':
          $ref: '#/components/responses/OrderResponse'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
      x-codegen-request-body-name: body
    delete:
      tags:
        - order
      summary: Delete Order
      operationId: deleteUser
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        default:
          description: success
          content: {}
        '404':
          $ref: '#/components/responses/404'
  /order/list:
    get:
      tags:
        - order
      summary: Get order list
      operationId: getUserList
      responses:
        '200':
          $ref: '#/components/responses/OrderResponse'
        '404':
          $ref: '#/components/responses/404'
components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        cutomerId:
          type: integer
          format: int64
        status:
          type: string
          description: Order Status
        orderTime:
          type: string
          format: date-time
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        itemId:
          type: integer
          format: int64
    OrderStatus:
      type: object
      properties:
        id:
          type: integer
          format: int64
        order_id:
          type: integer
          format: int64
        status:
          type: string
          enum:
            - pending
            - progressing
            - completed
            - cancel
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        price:
          type: integer
          format: float
        unit:
          type: string
          enum:
            - single
            - set
    ClientErrorResponse:
      type: object
      properties:
        error_code:
          type: integer
        message:
          type: string
  responses:
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClientErrorResponse'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClientErrorResponse'
    '403':
      description: Forbidden
    '404':
      description: Not Found
      content: {}
    OrderResponse:
      description: Order
      content:
        application/json:
          schema:
            type: object
            properties:
              order:
                $ref: '#/components/schemas/Order'
              status:
                $ref: '#/components/schemas/OrderStatus'
              order_items:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  requestBodies:
    orderRequest:
      content:
        '*/*':
          schema:
            type: object
            properties:
              order:
                $ref: '#/components/schemas/Order'
              order_items:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem'